@page "/"
@using Daissect.Shared
@inject Daissect.Client.Services.RepositoryService repositoryService
@inject Daissect.Client.Services.CodeService codeService

<div class="container">
    <div class="py-5 text-center">
        <img class="d-block mx-auto mb-4" src="images/iKnow.png" asp-append-version="true" alt="" width="72" height="72">
        <h2>dAIssect <span style="font-size: smaller; color: dimgray"><i>- A repository exploration thing</i></span> </h2>
        <p class="lead">Analyzes repositories and visualizes hierarchies and dependencies in an interactive chart. Applying reinforcement learning. Built on Blazor, ASP.NET Core, Bootstrap 4 and GitHub Rest API v3.</p>
    </div>
    <div class="row">
        <div class="col-md-6 order-md-2 mb-4">
            @*<ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" href="#"><span class="oi oi-magnifying-glass"/> Code loupe</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#"><span class="oi oi-terminal"/> Terminal</a>
                    </li>
                </ul>*@
            <label><span class="oi oi-magnifying-glass"></span> Code loupe</label>
            <div id="editor">
                <pre></pre>
            </div>
            @*<partial name="~/Shared/_Diagram.cshtml"></partial>*@
        </div>
        <div class="col-md-6 order-md-1">
            <div class="row">
                <div class="col-md-12" style="margin-bottom: 10px">
                    <label for="repositorySet">Repositories</label>
                    <select id="repositorySet" class="form-control" onchange="@RepositorySetChanged">
                        <option>Select a repository set</option>
                        <option>Daissect - A repository exploration thing</option>
                        <option>MarsCom - Enterprise repository collection</option>
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <ConciseList listItems="@Repositories" />
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-12">
            <div id="myPaletteDiv" hidden="hidden" style="width: 100px; margin-right: 2px; background-color: whitesmoke; border: solid 1px black"></div>
            <div id="myDiagramDiv" style="border: solid 1px black; width:1110px; height:500px"></div>
            <p><input class="form-control" id="levelSlider" type="range" min="0" max="5" value="3"></p>
            <textarea id="mySavedModel" hidden="hidden" style="width:100%;height:300px">{ "class": "go.GraphLinksModel",
  "nodeDataArray": [
{"key":1, "text":"Daissect", "isGroup":true, "category":"OfGroups", "background":"#13b4ff"},
{"key":2, "text":"Mars.Cognitive.Services", "isGroup":true, "category":"OfGroups", "background":"#ecf516"},
{"key":12, "text":"Mars.Platform", "isGroup":true, "category":"OfGroups", "background":"#11e128"},
{"key":3, "text":"Daissect.Client", "isGroup":true, "category":"OfNodes", "group":1},
{"key":4, "text":"Daissect.Server", "isGroup":true, "category":"OfNodes", "group":1},
{"key":5, "text":"Daissect.Shared", "isGroup":true, "category":"OfNodes", "group":1},
{"key":8, "text":"DeepThought", "isGroup":true, "category":"OfNodes", "group":2},
{"key":6, "text":"ReinforcedLearning", "isGroup":true, "category":"OfNodes", "group":2},
{"key":7, "text":"PerceptiveServices", "isGroup":true, "category":"OfNodes", "group":2},
{"key":9, "text":"Daissect.Client.Services", "isGroup":true, "category":"OfNodes", "group":3},
{"key":10, "text":"Pages", "isGroup":true, "category":"OfNodes", "group":3},
{"key":11, "text":"Daissect.Server.Controllers", "isGroup":true, "category":"OfNodes", "group":4},
{"key":15, "text":"..ServiceClients", "isGroup":true, "category":"OfNodes", "group":4},
{"key":16, "text":"Mars.Platform (submodule)", "isGroup":true, "category":"OfNodes", "group":4, "background":"#11e128"},
{"key":13, "text":"Requests", "isGroup":true, "category":"OfNodes", "group":12},
{"key":14, "text":"Responses", "isGroup":true, "category":"OfNodes", "group":12},
{"text":"Index.cshtml", "group":10, "key":-7},
{"text":"_ViewImports.cshtml", "group":10, "key":-8},
{"text":"RepositoryService.cs", "group":9, "key":-9},
{"text":"Program.cs", "group":4, "key":-10},
{"text":"Startup.cs", "group":4, "key":-11},
{"text":"StochasticOptimization.cs", "group":6, "key":-14},
{"text":"BruteForce.cs", "group":6, "key":-15},
{"text":"RepositoryController.cs", "group":11, "key":-16},
{"key":88,"text":"Repository.cs", "group":5, "key":-17},
{"text":"LunkwillFook.cs", "group":8, "key":-18},
{"text":"Psyche.cs", "group":7, "key":-19},
{"text":"DeepThoughtServiceClient", "group":15, "key":-20}
],
  "linkDataArray": [{"from": 15, "to": 8, "text":"service calls"},{"from": 16, "to": 12,"text":"is submodule"}] }
             </textarea>
        </div>
    </div>
    <footer class="my-5 pt-5 text-muted text-center text-small" style="padding-top: 0px">
        <p class="mb-1">&copy; 2018 Anders Mars Consulting</p>
        <ul class="list-inline">
            <li class="list-inline-item"><a href="#">Privacy</a></li>
            <li class="list-inline-item"><a href="#">Terms</a></li>
            <li class="list-inline-item"><a href="#">Support</a></li>
        </ul>
    </footer>
</div>

@functions {

    List<Repository> Repositories = new List<Repository>();
    List<String> RepoStrings = new List<String>();

    protected override async Task OnInitAsync()
    {
        Repositories = await GetRepositories();
        Repositories = new List<Repository>();
        await SetAceCode("Ready to analyze.");
    }

    public async Task RepositorySetChanged(UIChangeEventArgs e)
    {
        //var sfd = await codeService.GetCode();
        //var code = await GetCode();
        Repositories = await GetRepositories();
        await InitializeJavascripts(Repositories.First().Code);
    }

    protected async Task<List<Repository>> GetRepositories()
    {
        return await repositoryService.GetRepositories();
    }

    //protected async Task<string> GetCode()
    //{
    //    return await codeService.GetCode();
    //}

    protected async Task InitializeJavascripts(string code)
    {
        await JSRuntime.Current.InvokeAsync<bool>("triggerJavascripts", code);
    }

    protected async Task SetAceCode(string code)
    {
        await JSRuntime.Current.InvokeAsync<bool>("initAce", code);
    }

    [JSInvokable]
    public static Task<bool> DiagramObjectClicked(string key)
    {
        Console.WriteLine($"clicked '{key}'");

        if (key == "5")
        {
            var code = @"namespace Daissect.Shared
{
    public class Repository
    {
        public string Address { get; set; }
        public string Description { get; set; }
        public string Color { get; set; }
        public string Code { get; set; }
    }
}";
            JSRuntime.Current.InvokeAsync<bool>("initAce", code);
        }

        return Task.FromResult(true);
    }
}